'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { Radio, RadioGroup } from '@headlessui/react'
import { CheckCircleIcon } from '@heroicons/react/20/solid'
import { PlusCircleIcon, PlusIcon } from '@heroicons/react/24/solid';
import { Dialog, DialogBackdrop, DialogPanel, DialogTitle } from '@headlessui/react'
import { ExclamationTriangleIcon, XMarkIcon } from '@heroicons/react/24/outline'
import { useEffect } from 'react';
import { Skeleton } from './ui/skeleton';
import useWallet from '@/lib/useWallet';

import {
    Select,
    SelectContent,
    SelectItem,
    SelectTrigger,
    SelectValue,
} from "@/components/ui/select"
import TokenIcon from './TokenIcon';

import {
    Accordion,
    AccordionContent,
    AccordionItem,
    AccordionTrigger,
} from "@/components/ui/accordion"

import {
    Sheet,
    SheetContent,
    SheetDescription,
    SheetHeader,
    SheetTitle,
    SheetTrigger,
} from "@/components/ui/sheet"



const options = [
    {
        name: 'Text',
        color: 'bg-pink-500',
        content: '[Question UI: 1]',
        graphic: <svg width="50" height="50" viewBox="0 0 121 107" fill="currentcolor" xmlns="http://www.w3.org/2000/svg" stroke-width="0.5px" stroke-linecap="round" stroke-linejoin="round"><path d="M118.08 82.02V94.27L98.0801 104.27V92.02L106.71 87.71L118.08 82.02Z" stroke="white" stroke-linejoin="round" /><path d="M93.6101 77.1899L91.3901 78.2999L79.3901 84.2999V65.9199L83.3801 68.2299L90.0701 72.0899V75.1499L91.3901 75.9099L93.6101 77.1899Z" stroke="white" stroke-linejoin="round" /><path d="M107.23 78.8199L98.7001 83.0799L90.0701 87.3999V90.4599L79.3901 84.2999L91.3901 78.2999L93.6101 77.1899L98.0801 79.7699L103.86 76.8799L107.23 78.8199Z" stroke="white" stroke-linejoin="round" /><path d="M118.08 57.52V69.77L98.0801 79.77V67.52L99.3901 66.87L109.55 61.79L118.08 57.52Z" stroke="white" stroke-linejoin="round" /><path d="M71.3899 66.46V75.65L63.3799 79.65V70.46L70.5899 66.86L71.3899 66.46Z" stroke="white" stroke-linejoin="round" /><path d="M48.9602 48.3496L48.6802 48.4897L44.7002 50.4796V45.8896L48.6802 48.1896L48.9602 48.3496Z" stroke="white" stroke-linejoin="round" /><path d="M83.3799 42.0796V46.1196L71.3899 52.1096V57.2696L70.5799 57.6696L63.3799 61.2696V52.0796L64.6999 51.4196L66.3199 50.6096L74.8499 46.3496L75.3699 46.0896L83.3799 42.0796Z" stroke="white" stroke-linejoin="round" /><path d="M83.3799 42.0797L75.3699 46.0897L74.8499 46.3497L66.3199 50.6097L64.6999 51.4197L63.3799 52.0797L59.3799 45.1797L66.5899 41.5697L70.8499 39.4397L79.3799 35.1797L83.3799 42.0797Z" stroke="white" stroke-linejoin="round" /><path d="M27.06 26.5198L22 23.5998L2 12.0498V48.7998L10 53.4198V44.2298L18.53 49.1598L20.68 50.3998V59.5898L28.68 64.2098V27.4598L27.06 26.5198ZM20.68 41.2098L10 35.0498V25.8598L18.53 30.7798L20.68 32.0198V41.2098Z" stroke="white" stroke-linejoin="round" /><path d="M20.68 32.0198V41.2098L10 35.0498L18.53 30.7798L20.68 32.0198Z" stroke="white" stroke-linejoin="round" /><path d="M18.53 30.7799L10 35.0499V25.8599L18.53 30.7799Z" stroke="white" stroke-linejoin="round" /><path d="M48.6802 17.46V26.09L39.6402 30.61L36.6902 32.08V60.21L28.6802 64.21V27.46L31.6302 25.99L40.1602 21.72L48.6802 17.46Z" stroke="white" stroke-linejoin="round" /><path d="M48.68 17.4598L40.16 21.7198L31.63 25.9898L28.68 27.4598L27.06 26.5198L22 23.5998L2 12.0498L22 2.0498L48.68 17.4598Z" stroke="white" stroke-linejoin="round" /><path d="M18.53 49.16L10 53.42V44.23L18.53 49.16Z" stroke="white" stroke-linejoin="round" /><path d="M79.3799 35.1796L70.8499 39.4396L66.5899 41.5696L59.3799 45.1796L57.4899 44.0896L56.6899 43.6296L48.6799 38.9996L36.6899 32.0796L39.6399 30.6096L48.6799 26.0896L56.6899 22.0796L79.3799 35.1796Z" stroke="white" stroke-linejoin="round" /><path d="M71.3899 75.6499V75.9299L59.3799 81.9299L63.3799 79.6499L71.3899 75.6499Z" stroke="white" stroke-linejoin="round" /><path d="M63.3799 61.2696V52.0796L59.3799 45.1796L57.4899 44.0896L56.6899 43.6296L48.6799 38.9996L36.6899 32.0796V68.8296L59.3799 81.9296L63.3799 79.6496V70.4596L59.3799 63.5496L62.1399 61.9796L63.3799 61.2696ZM55.3699 70.4296L44.6999 64.2696V59.6696L48.9699 62.1396L55.3699 65.8396V70.4296ZM55.3699 56.6496L48.6799 52.7796L44.6999 50.4796V45.8896L48.6799 48.1896L48.9599 48.3496L55.3699 52.0496V56.6496Z" stroke="white" stroke-linejoin="round" /><path d="M55.3702 65.8396V70.4296L44.7002 64.2696L48.9702 62.1396L55.3702 65.8396Z" stroke="white" stroke-linejoin="round" /><path d="M48.9702 62.1399L44.7002 64.2699V59.6699L48.9702 62.1399Z" stroke="white" stroke-linejoin="round" /><path d="M55.3702 52.0496V56.6496L48.6802 52.7796L44.7002 50.4796L48.6802 48.4896L48.9602 48.3496L55.3702 52.0496Z" stroke="white" stroke-linejoin="round" /><path d="M71.3899 57.27V66.46L70.5899 66.86L63.3799 70.46L59.3799 63.55L62.1399 61.98L63.3799 61.27L70.5799 57.67L71.3899 57.27Z" stroke="white" stroke-linejoin="round" /><path d="M90.0701 75.1499V72.0899L83.3801 68.2299L79.3901 65.9199V84.2999L90.0701 90.4599V87.3999L98.0801 92.0199V104.27L71.3901 88.8599V52.1099L76.1701 54.8699L82.1401 58.3199L91.3901 63.6599L98.0801 67.5199V79.7699L93.6101 77.1899L91.3901 75.9099L90.0701 75.1499Z" stroke="white" stroke-linejoin="round" /><path d="M118.08 57.5199L109.55 61.7899L99.3901 66.8699L98.0801 67.5199L91.3901 63.6599L82.1401 58.3199L76.1701 54.8699L71.3901 52.1099L83.3801 46.1199L91.3901 42.1099L118.08 57.5199Z" stroke="white" stroke-linejoin="round" /><path d="M118.08 82.0199L106.71 87.7099L98.0798 92.0199L90.0698 87.3999L98.6998 83.0799L107.23 78.8199L110.07 77.3999L118.08 82.0199Z" stroke="white" stroke-linejoin="round" /></svg>,
    },
    {
        name: 'Number',
        color: 'bg-purple-500',
        content: '[Question UI: 2]',
        graphic: <svg width="50" height="50" viewBox="0 0 122 114" fill="currentcolor" xmlns="http://www.w3.org/2000/svg" stroke-width="0.5px" stroke-linecap="round" stroke-linejoin="round"><path d="M21.4251 23.49V66.36L12.0851 60.97V28.82L2.74512 23.43V12.71L21.4251 23.49Z" stroke="white" stroke-linejoin="round" /><path d="M41.4251 13.49L31.4751 18.47L21.4251 23.49L2.74512 12.71L22.7451 2.70996L41.4251 13.49Z" stroke="white" stroke-linejoin="round" /><path d="M33.8753 30.68V41.4L40.5053 45.23L33.8753 48.54V60.14L21.4253 66.36V23.49L31.4753 18.47L41.4253 13.49V26.91L33.8753 30.68Z" stroke="white" stroke-linejoin="round" /><path d="M43.215 61.0799V68.2199L61.895 79.0099V89.7299L33.875 73.5499V48.5399L41.425 52.8999L52.555 59.3299V52.1799L41.425 45.7599L40.505 45.2299L33.875 41.3999V30.6799L41.425 35.0399L50.455 40.2499L53.875 42.2299L61.895 46.8599V71.8599L49.845 64.9099L43.215 61.0799Z" stroke="white" stroke-linejoin="round" /><path d="M81.895 36.8599L71.955 41.8299L65.315 45.1499L61.895 46.8599L53.875 42.2299L50.455 40.2499L41.425 35.0399L33.875 30.6799L41.425 26.9099L53.875 20.6799L81.895 36.8599Z" stroke="white" stroke-linejoin="round" /><path d="M119.255 58.43L109.315 63.4L102.675 66.72L99.2554 68.43L97.4654 67.4L94.0454 65.42L81.8954 58.41L71.2354 52.25L81.8954 46.92L91.2354 42.25L119.255 58.43Z" stroke="white" stroke-linejoin="round" /><path d="M99.2554 68.43V111.29L71.2354 95.12V84.4L71.8454 84.75L89.9154 95.18V88.04L78.4854 81.44L77.8654 81.08L77.4654 80.85V73.71L81.8954 76.27L84.4954 77.77L89.9154 80.9V73.75L84.0954 70.39L81.8954 69.12L81.7954 69.06L75.1554 65.23L71.2354 62.97V52.25L81.8954 58.41L94.0454 65.42L97.4654 67.4L99.2554 68.43Z" stroke="white" stroke-linejoin="round" /><path d="M77.465 73.7101V80.8501L77.865 81.0801L71.235 84.4001V85.0601L61.895 89.7301V79.0101L71.945 73.9801L81.795 69.0601L81.895 69.1201V71.5001L77.465 73.7101Z" stroke="white" stroke-linejoin="round" /><path d="M52.555 52.18V59.33L41.425 52.9L33.875 48.54L40.505 45.23L41.425 45.76L52.555 52.18Z" stroke="white" stroke-linejoin="round" /><path d="M49.8453 64.9101L43.2153 68.2201V61.0801L49.8453 64.9101Z" stroke="white" stroke-linejoin="round" /><path d="M81.7953 69.0599L71.9453 73.9799L61.8953 79.0099L43.2153 68.2199L49.8453 64.9099L61.8953 71.8599L65.3053 70.1499L75.1553 65.2299L81.7953 69.0599Z" stroke="white" stroke-linejoin="round" /><path d="M71.235 52.2499V62.9699L75.155 65.2299L65.305 70.1499L61.895 71.8599V46.8599L65.315 45.1499L71.955 41.8299L81.895 36.8599V46.9199L71.235 52.2499Z" stroke="white" stroke-linejoin="round" /><path d="M119.255 58.4299V101.29L99.2549 111.29V68.4299L102.675 66.7199L109.315 63.3999L119.255 58.4299Z" stroke="white" stroke-linejoin="round" /><path d="M89.9154 88.0401V95.1801L71.8454 84.7501L71.2354 84.4001L77.8654 81.0801L78.4854 81.4401L89.9154 88.0401Z" stroke="white" stroke-linejoin="round" /><path d="M89.9153 73.7499V80.8999L84.4953 77.7699L81.8953 76.2699L77.4653 73.7099L81.8953 71.4999L84.0953 70.3899L89.9153 73.7499Z" stroke="white" stroke-linejoin="round" /></svg>,
    },
    {
        name: 'Transact',
        color: 'bg-blue-500',
        content: '[Question UI: 3]',
        graphic: <svg width="50" height="50" viewBox="0 0 126 115" fill="currentcolor" xmlns="http://www.w3.org/2000/svg" stroke-width="0.5px" stroke-linecap="round" stroke-linejoin="round"><path d="M98.8807 49.4099C98.9507 49.5099 99.0108 49.62 99.0708 49.73L104.911 46.3999L98.8807 49.4099ZM84.3008 56.75L79.0708 59.73L84.6407 56.95L84.3008 56.75Z" stroke="white" stroke-linejoin="round" /><path d="M123.051 83.8998L105.841 92.4999L103.051 93.8998L88.4507 68.7198L86.3706 65.1299L93.0406 61.7998L106.371 55.1299L123.051 83.8998Z" stroke="white" stroke-linejoin="round" /><path d="M80.5306 68.46L87.2007 79.97L60.9606 64.8199L57.1807 62.6399L59.5206 61.47L75.0707 53.6899C75.8107 54.6599 76.5107 55.6499 77.1807 56.6799C77.8407 57.6699 78.4707 58.69 79.0707 59.73L84.6406 56.95L93.0406 61.7999L86.3706 65.13L84.2906 66.3199L80.5306 68.46Z" stroke="white" stroke-linejoin="round" /><path d="M80.5306 93.3398L83.3806 98.2499L82.4407 98.7098L79.0707 100.4C76.7807 101.7 74.1206 102.22 71.1006 101.95C68.0706 101.68 64.8206 100.54 61.3506 98.5398C54.4006 94.5298 48.4906 88.3198 43.6306 79.9298C43.6106 79.8998 43.6006 79.8798 43.5906 79.8498C42.0106 77.1398 40.7006 74.4398 39.6406 71.7698C38.9706 70.0998 38.4107 68.4298 37.9507 66.7798C36.8707 62.9298 36.3306 59.1399 36.3306 55.3799C36.3306 54.0599 36.4006 52.7999 36.5406 51.6199C37.2106 45.6899 39.5706 41.5798 43.6306 39.2598C45.0306 38.4698 46.5106 37.9498 48.0806 37.7198C50.7906 37.2998 53.7506 37.7199 56.9706 38.9899C56.5406 40.8899 56.3306 43.0299 56.3306 45.3799C56.3306 50.6499 57.3906 56.0198 59.5206 61.4698L57.1807 62.6398V72.2098L71.1506 80.2798C74.2506 83.6498 77.6506 86.4098 81.3506 88.5398C82.7506 89.3498 84.1107 90.0098 85.4507 90.5398L80.5306 93.3398Z" stroke="white" stroke-linejoin="round" /><path d="M33.4408 74.87L27.9907 77.6C23.0607 72.84 19.0408 67.1 15.9508 60.37C12.8608 53.64 11.3108 47.1599 11.3108 40.9399C11.3108 34.7199 12.8608 30.03 15.9508 26.87C17.9408 24.83 20.3108 23.65 23.0608 23.33C24.5908 23.13 26.2307 23.1999 27.9907 23.5399L33.1808 20.9399C31.9408 23.6499 31.3108 26.9899 31.3108 30.9399C31.3108 32.3299 31.3908 33.7299 31.5408 35.1399C29.3208 38.7899 28.1407 43.5499 28.0107 49.4199C27.9907 49.7999 27.9907 50.1799 27.9907 50.5699C27.9907 58.5099 29.8108 66.6 33.4408 74.87Z" stroke="white" stroke-linejoin="round" /><path d="M15.9507 26.8696C12.8607 30.0296 11.3107 34.7196 11.3107 40.9396C11.3107 47.1596 12.8607 53.6396 15.9507 60.3696C19.0407 67.0996 23.0607 72.8396 27.9907 77.5996V87.6496C20.7607 81.3296 14.7907 73.4096 10.0607 63.8996C5.33073 54.3996 2.9707 45.1397 2.9707 36.1297C2.9707 27.1197 5.33073 20.5796 10.0607 16.5296C11.1307 15.6096 12.2606 14.8497 13.4606 14.2497L13.8406 14.0596C17.2006 12.4696 21.0507 12.0795 25.3907 12.8895C26.2407 13.0395 27.1007 13.2396 27.9907 13.4896V23.5396C26.2307 23.1996 24.5907 23.1296 23.0607 23.3296C20.3107 23.6496 17.9407 24.8296 15.9507 26.8696Z" stroke="white" stroke-linejoin="round" /><path d="M47.9906 3.48985L27.9906 13.4899C27.1006 13.2399 26.2406 13.0398 25.3906 12.8898C21.0506 12.0798 17.2006 12.4698 13.8406 14.0598L33.1807 4.38975L33.6006 4.17979C37.6606 2.16979 42.4606 1.93985 47.9906 3.48985Z" stroke="white" stroke-linejoin="round" /><path d="M47.9907 3.48975V13.5397L33.1808 20.9397L27.9907 23.5397V13.4897L47.9907 3.48975Z" stroke="white" stroke-linejoin="round" /><path d="M37.5107 82.89L27.9907 87.65V77.6001L33.4408 74.8701C34.6108 77.5201 35.9707 80.2 37.5107 82.89Z" stroke="white" stroke-linejoin="round" /><path d="M104.911 46.3999L98.8806 49.4099L84.9106 56.3999C81.8506 51.1199 78.3106 46.33 74.2806 42C70.2406 37.68 65.9406 34.1999 61.3506 31.5499C61.2106 31.4699 61.0807 31.3899 60.9407 31.3199C57.2207 29.2099 53.7207 27.8399 50.4407 27.2199C46.4307 26.4499 42.7607 26.7999 39.4207 28.2599L57.7406 19.1C64.2406 15.4 72.1106 16.2099 81.3506 21.5499C85.9406 24.1999 90.2406 27.68 94.2806 32C98.3106 36.33 101.851 41.1199 104.911 46.3999Z" stroke="white" stroke-linejoin="round" /><path d="M79.0708 100.4L84.9108 110.47C81.8508 112.21 78.3108 112.91 74.2808 112.58C70.2408 112.25 65.9407 110.76 61.3507 108.11C52.1107 102.77 44.2407 94.4997 37.7407 83.2897C37.6607 83.1597 37.5907 83.0196 37.5107 82.8896C35.9707 80.1996 34.6108 77.5198 33.4408 74.8698C29.8108 66.5998 27.9907 58.5097 27.9907 50.5697C27.9907 50.1797 27.9907 49.7997 28.0107 49.4197C28.1407 43.5497 29.3208 38.7896 31.5408 35.1396C33.1008 32.5796 35.1607 30.5697 37.7407 29.0997C38.2907 28.7897 38.8508 28.5096 39.4208 28.2596C42.7608 26.7996 46.4308 26.4497 50.4408 27.2197C53.7208 27.8397 57.2208 29.2097 60.9408 31.3197C61.0808 31.3897 61.2107 31.4697 61.3507 31.5497C65.9407 34.1997 70.2408 37.6798 74.2808 41.9998C78.3108 46.3298 81.8508 51.1197 84.9108 56.3997L84.3008 56.7498L79.0708 59.7297C78.4708 58.6897 77.8408 57.6697 77.1808 56.6797C76.5108 55.6497 75.8108 54.6597 75.0708 53.6897C73.8308 52.0297 72.5007 50.4597 71.1007 48.9597C68.0707 45.7397 64.8207 43.1298 61.3507 41.1198C59.8407 40.2498 58.3807 39.5397 56.9707 38.9897C53.7507 37.7297 50.7907 37.2997 48.0807 37.7197C46.5107 37.9497 45.0307 38.4696 43.6307 39.2596C39.5707 41.5796 37.2108 45.6898 36.5408 51.6198C36.4008 52.7998 36.3307 54.0598 36.3307 55.3798C36.3307 59.1398 36.8708 62.9297 37.9508 66.7797C38.4108 68.4297 38.9707 70.0997 39.6407 71.7697C40.7007 74.4397 42.0107 77.1397 43.5907 79.8497C43.6007 79.8797 43.6107 79.8997 43.6307 79.9297C48.4907 88.3197 54.4007 94.5297 61.3507 98.5397C64.8207 100.54 68.0707 101.68 71.1007 101.95C74.1207 102.22 76.7808 101.7 79.0708 100.4Z" stroke="white" stroke-linejoin="round" /><path d="M99.0707 49.73L84.6406 56.95" stroke="white" stroke-linejoin="round" /><path d="M103.051 93.8997L101.581 94.7397L89.4407 101.66L86.3706 103.41L84.1606 99.6097L83.3806 98.2498L80.5306 93.3397L85.4507 90.5397L87.2007 89.5397L71.1506 80.2797L57.1807 72.2097V62.6396L60.9606 64.8197L87.2007 79.9697L80.5306 68.4597L84.2906 66.3197L86.3706 65.1298L88.4507 68.7197L103.051 93.8997Z" stroke="white" stroke-linejoin="round" /><path d="M123.051 83.8999L106.371 93.4099L102.061 95.5599L89.7106 101.74L86.3706 103.41L89.4407 101.66L101.581 94.74L103.051 93.8999L105.841 92.5L123.051 83.8999Z" stroke="white" stroke-linejoin="round" /><path d="M104.911 100.47L103.561 101.14L84.9108 110.47L79.0708 100.4L82.4408 98.7096L83.3807 98.2496L84.1608 99.6096L86.3707 103.41L89.7107 101.74L102.061 95.5596L104.911 100.47Z" stroke="white" stroke-linejoin="round" /></svg>,
    },
    {
        name: 'Swap',
        color: 'bg-green-500',
        content: '[Question UI: 4]',
        graphic: <svg width="50" height="50" viewBox="0 0 93 103" fill="currentcolor" xmlns="http://www.w3.org/2000/svg" stroke-width="0.5px" stroke-linecap="round" stroke-linejoin="round"><path d="M12.04 14.9498L13.41 14.2598C12.94 14.4598 12.49 14.6998 12.04 14.9498Z" stroke="white" stroke-linejoin="round" /><path d="M48.4004 72.8397V73.1097C48.3704 74.7197 48.1104 75.9897 47.6204 76.9497C47.2604 77.6497 46.8204 78.2097 46.2904 78.6297C46.0604 78.8197 45.8104 78.9797 45.5504 79.1097C44.7004 79.5397 43.7004 79.6997 42.5604 79.6097C41.4204 79.5197 40.2004 79.2397 38.9004 78.7897V83.2597L33.4504 80.1097V75.4697C31.0104 73.3997 29.0204 71.0497 27.4904 68.4097C26.7004 67.0497 26.0204 65.6097 25.4504 64.0797C25.3604 63.8397 25.2704 63.5897 25.1804 63.3397C24.8604 62.4097 24.5704 61.4397 24.3304 60.4497C24.2504 60.1497 24.1804 59.8397 24.1104 59.5297L28.2204 60.0497L29.2404 60.1797C29.3204 60.5197 29.4004 60.8597 29.4804 61.1897C30.1104 63.5597 31.0004 65.6097 32.1604 67.3597C33.4904 69.3397 35.0104 70.8297 36.7204 71.8197C38.3204 72.7397 39.7104 73.1397 40.8804 72.9997C40.9604 72.9997 41.0404 72.9797 41.1204 72.9697C42.3404 72.7497 42.9504 71.6597 42.9504 69.6897C42.9504 68.6097 42.7004 67.5197 42.2004 66.4097C41.9004 65.7397 41.5104 65.0697 41.0404 64.3897C40.4004 63.4897 39.5204 62.4097 38.3804 61.1397C37.5704 60.2297 36.6304 59.2397 35.5604 58.1497C35.3204 57.8997 35.0704 57.6497 34.8204 57.3897C34.6304 57.1997 34.4304 56.9997 34.2304 56.7997C33.6904 56.2697 33.1804 55.7497 32.7004 55.2397C32.0804 54.5797 31.5004 53.9397 30.9704 53.3097C29.5104 51.5997 28.3504 49.9797 27.4904 48.4397C26.0704 45.8897 25.3504 43.2197 25.3504 40.4197C25.3504 40.1397 25.3504 39.8697 25.3804 39.6097C25.5304 37.5797 26.2604 36.0497 27.5704 35.0397C27.7204 34.9297 27.8704 34.8297 28.0204 34.7397L28.6604 34.4197C29.9904 33.8897 31.6404 33.9697 33.6004 34.6397V30.1697L35.2404 31.1197L39.0504 33.3197V37.7897C40.9204 39.0397 42.6204 40.8897 44.1504 43.3197C45.5404 45.5197 46.5404 47.7197 47.1304 49.9097C47.2004 50.1297 47.2604 50.3597 47.3104 50.5897L44.2804 50.2597L42.9504 50.1097L42.3204 50.0397C41.9104 48.4297 41.2304 46.8897 40.3004 45.4297C39.3704 43.9697 38.0704 42.7597 36.4104 41.7997C34.5904 40.7497 33.2004 40.3897 32.2404 40.7297C31.4604 41.0097 30.9904 41.6897 30.8504 42.7697C30.8204 43.0097 30.8004 43.2797 30.8004 43.5597C30.8004 45.1097 31.4004 46.6797 32.5904 48.2597C33.2004 49.0597 34.0504 50.0497 35.1504 51.2097C35.7004 51.7897 36.3104 52.4197 36.9804 53.0897C37.2604 53.3697 37.5504 53.6697 37.8604 53.9597C38.2404 54.3397 38.6404 54.7197 39.0504 55.1197C39.0804 55.1497 39.1204 55.1897 39.1504 55.2197C39.4104 55.4797 39.6604 55.7297 39.9004 55.9797C43.1704 59.3297 45.3804 62.2997 46.5304 64.8797C47.7704 67.6897 48.4004 70.3397 48.4004 72.8397Z" stroke="white" stroke-linejoin="round" /><path d="M70.51 44.3298V65.7698L68.3 64.4998L62.76 61.2998L51.82 54.9898V47.8398L52.28 48.1098L59.24 52.1298L59.53 52.2898C58.6 50.1598 57.56 48.0698 56.41 46.0398C56.34 45.9098 56.27 45.7898 56.19 45.6598C56.02 45.3598 55.84 45.0598 55.67 44.7598C55.42 44.3398 55.17 43.9198 54.9 43.5098C54.73 43.2398 54.56 42.9598 54.38 42.6898C54.24 42.4698 54.1 42.2498 53.95 42.0298C53.69 41.6398 53.43 41.2398 53.15 40.8498C52.88 40.4598 52.61 40.0698 52.33 39.6798C51.87 39.0498 51.4 38.4198 50.92 37.7998C50.52 37.2798 50.1 36.7598 49.68 36.2398C48.93 35.3298 48.17 34.4498 47.4 33.6198C46.74 32.8998 46.07 32.2098 45.39 31.5498C45.08 31.2398 44.76 30.9298 44.43 30.6298C43.44 29.7098 42.43 28.8498 41.39 28.0398C40.93 27.6698 40.46 27.3198 39.99 26.9798C38.77 26.0998 37.52 25.2998 36.25 24.5598C33.92 23.2098 31.67 22.2198 29.51 21.5798C28.07 21.1598 26.67 20.8898 25.31 20.7898C24.31 20.7098 23.36 20.7098 22.44 20.7798C20.22 20.9398 18.22 21.5198 16.44 22.5398C13.92 23.9798 11.92 26.2198 10.44 29.2598C8.96 32.3098 8.22 36.0698 8.22 40.5298L2 36.9398C2 31.5198 2.89 26.9398 4.68 23.2098C6.47 19.4798 8.92 16.7298 12.04 14.9498L13.41 14.2598L13.52 14.2098C16.29 12.9798 19.43 12.5098 22.94 12.7998C23.54 12.8498 24.15 12.9198 24.77 13.0298C27.34 13.4498 30.02 14.3098 32.8 15.6098C33.93 16.1398 35.08 16.7398 36.25 17.4098C39.49 19.2798 42.59 21.5398 45.55 24.1998C45.96 24.5698 46.38 24.9498 46.79 25.3398C46.86 25.4098 46.94 25.4798 47.01 25.5498C47.86 26.3598 48.7 27.2098 49.52 28.0898C50.35 28.9698 51.17 29.8898 51.98 30.8498C52.07 30.9598 52.16 31.0698 52.26 31.1798C52.27 31.1898 52.28 31.2098 52.29 31.2198C55.48 35.0498 58.3 39.1098 60.74 43.3798C60.81 43.5098 60.89 43.6398 60.96 43.7698C62.16 45.8898 63.27 48.0698 64.28 50.2998V40.7398L65.09 41.2098L65.55 41.4698L70.51 44.3298Z" stroke="white" stroke-linejoin="round" /><path d="M70.51 76.4897C70.51 78.6797 70.36 80.7397 70.07 82.6497C69.64 85.4797 68.89 87.9997 67.82 90.2197C67.79 90.2797 67.76 90.3397 67.73 90.3997C65.95 94.0397 63.53 96.7297 60.46 98.4797C60.3 98.5697 60.14 98.6597 59.98 98.7397L59.47 98.9997H59.46C56.58 100.39 53.28 100.93 49.56 100.63C45.41 100.29 40.97 98.7497 36.25 96.0197C30.44 92.6697 25.09 88.0597 20.21 82.2097C17.18 78.5697 14.5 74.7497 12.16 70.7297C10.72 68.2697 9.4 65.7397 8.22 63.1397V72.6997L2 69.0997V47.6597L20.68 58.4497V65.5897L12.97 61.1397C14.06 63.6497 15.31 66.0897 16.71 68.4497C18.49 71.4797 20.53 74.3997 22.82 77.1897C26.9 82.1697 31.37 86.0597 36.25 88.8797C40.14 91.1297 43.79 92.3797 47.19 92.6497C50.59 92.9097 53.55 92.3297 56.06 90.8897C57.43 90.1097 58.65 89.0897 59.7 87.8297C60.61 86.7797 61.39 85.5597 62.06 84.1697C62.42 83.4397 62.73 82.6697 62.99 81.8497C63.85 79.2797 64.28 76.2897 64.28 72.8997L70.51 76.4897Z" stroke="white" stroke-linejoin="round" /><path d="M58.9004 72.4399V73.2599L52.5204 76.4499L46.9504 79.2299L38.9004 83.2599V78.7899C40.2004 79.2399 41.4204 79.5199 42.5604 79.6099C43.7004 79.6999 44.7004 79.5399 45.5504 79.1099L46.3704 78.6999L51.8504 75.9599L58.1304 72.8199L58.9004 72.4399Z" stroke="white" stroke-linejoin="round" /><path d="M47.3998 33.6199L45.8598 34.3899L39.0498 37.7899V33.3199L44.4298 30.6299C44.7598 30.9299 45.0798 31.2399 45.3898 31.5499C46.0698 32.2099 46.7398 32.8999 47.3998 33.6199Z" stroke="white" stroke-linejoin="round" /><path d="M56.1898 45.6599L51.8198 47.8399V48.3399L48.3498 50.0699L47.3098 50.5899C47.2598 50.3599 47.1998 50.1299 47.1298 49.9099C46.5398 47.7199 45.5398 45.5199 44.1498 43.3199C42.6198 40.8899 40.9198 39.0399 39.0498 37.7899L45.8598 34.3899L47.3998 33.6199C48.1698 34.4499 48.9298 35.3299 49.6798 36.2399C50.0998 36.7599 50.5198 37.2799 50.9198 37.7999C51.3998 38.4199 51.8698 39.0499 52.3298 39.6799C52.6098 40.0699 52.8798 40.4599 53.1498 40.8499C53.4298 41.2399 53.6898 41.6399 53.9498 42.0299C54.0998 42.2499 54.2398 42.4699 54.3798 42.6899C54.5598 42.9599 54.7298 43.2399 54.8998 43.5099C55.1598 43.9199 55.4198 44.3399 55.6698 44.7599C55.8398 45.0599 56.0198 45.3599 56.1898 45.6599Z" stroke="white" stroke-linejoin="round" /><path d="M90.5098 34.3298V55.7698L70.5098 65.7698V44.3298L71.8198 43.6798L77.2398 40.9698L78.6098 40.2798L83.1898 37.9898L84.2798 37.4498L90.5098 34.3298Z" stroke="white" stroke-linejoin="round" /><path d="M29.5097 21.5798C28.6497 24.1498 28.2197 27.1398 28.2197 30.5298L8.21973 40.5298C8.21973 36.0698 8.95973 32.3098 10.4397 29.2598C11.9197 26.2198 13.9197 23.9798 16.4397 22.5398C18.2197 21.5198 20.2197 20.9398 22.4397 20.7798C23.3597 20.7098 24.3097 20.7098 25.3097 20.7898C26.6697 20.8898 28.0697 21.1598 29.5097 21.5798Z" stroke="white" stroke-linejoin="round" /><path d="M68.2998 64.5C68.1898 65.47 67.9598 66.29 67.6198 66.95C67.0998 67.96 66.4098 68.68 65.5498 69.11L58.8998 72.44L58.1298 72.82L51.8498 75.96L46.3698 78.7L45.5498 79.11C45.8098 78.98 46.0598 78.82 46.2898 78.63C46.8198 78.21 47.2598 77.65 47.6198 76.95C48.1098 75.99 48.3698 74.72 48.3998 73.11V72.84C48.3998 70.34 47.7698 67.69 46.5298 64.88C45.3798 62.3 43.1698 59.33 39.8998 55.98C39.6598 55.73 39.4098 55.48 39.1498 55.22C39.1198 55.19 39.0798 55.15 39.0498 55.12C38.6398 54.72 38.2398 54.34 37.8598 53.96C37.5498 53.67 37.2598 53.37 36.9798 53.09C36.3098 52.42 35.6998 51.79 35.1498 51.21C34.0498 50.05 33.1998 49.06 32.5898 48.26C31.3998 46.68 30.7998 45.11 30.7998 43.56C30.7998 43.28 30.8198 43.01 30.8498 42.77C30.9898 41.69 31.4598 41.01 32.2398 40.73C33.1998 40.39 34.5898 40.75 36.4098 41.8C38.0698 42.76 39.3698 43.97 40.2998 45.43C41.2298 46.89 41.9098 48.43 42.3198 50.04L42.9498 50.11L44.2798 50.26L47.3098 50.59L48.3498 50.07L51.8198 48.34V54.99L62.7598 61.3L68.2998 64.5Z" stroke="white" stroke-linejoin="round" /><path d="M34.8204 57.3897L31.2604 59.1697L29.2404 60.1797L28.2204 60.0497L24.1104 59.5297L28.2204 57.4797L29.9104 56.6297L32.7004 55.2397C33.1804 55.7497 33.6904 56.2697 34.2304 56.7997C34.4304 56.9997 34.6304 57.1997 34.8204 57.3897Z" stroke="white" stroke-linejoin="round" /><path d="M30.97 53.3099L28.8 54.3899L28.22 54.6799L22 57.7899L20.68 58.4499L2 47.6599L22 37.6599L25.38 39.6099C25.36 39.8699 25.35 40.1399 25.35 40.4199C25.35 43.2199 26.07 45.8899 27.49 48.4399C28.35 49.9799 29.51 51.5999 30.97 53.3099Z" stroke="white" stroke-linejoin="round" /><path d="M90.5105 66.4897C90.5105 71.9097 89.6105 76.4897 87.8205 80.2197C86.0305 83.9497 83.5805 86.6997 80.4605 88.4797L79.1105 89.1597L59.9805 98.7397C60.1405 98.6597 60.3005 98.5697 60.4605 98.4797C63.5305 96.7297 65.9505 94.0397 67.7305 90.3997C67.7605 90.3397 67.7905 90.2797 67.8205 90.2197C68.8905 87.9997 69.6405 85.4797 70.0705 82.6497C70.3605 80.7397 70.5105 78.6797 70.5105 76.4897L90.5105 66.4897Z" stroke="white" stroke-linejoin="round" /><path d="M80.3395 32.7099L75.7895 34.9798L66.9795 39.3898L65.0795 40.3398H65.0695L64.2795 40.7399V50.2999C63.2695 48.0699 62.1595 45.8899 60.9595 43.7699C60.8895 43.6399 60.8095 43.5099 60.7395 43.3799C58.2995 39.1099 55.4795 35.0499 52.2895 31.2199C52.2795 31.2099 52.2695 31.1899 52.2595 31.1799C52.1595 31.0699 52.0695 30.9599 51.9795 30.8499C51.1695 29.8899 50.3495 28.9698 49.5195 28.0898C48.6995 27.2098 47.8595 26.3599 47.0095 25.5499C46.9395 25.4799 46.8595 25.4098 46.7895 25.3398C46.3795 24.9498 45.9595 24.5698 45.5495 24.1998C42.5895 21.5398 39.4895 19.2799 36.2495 17.4099C35.0795 16.7399 33.9295 16.1398 32.7995 15.6098C30.0195 14.3098 27.3395 13.4498 24.7695 13.0298C24.1495 12.9198 23.5395 12.8499 22.9395 12.7999C19.4295 12.5099 16.2895 12.9799 13.5195 14.2099L32.0395 4.94985C35.1495 3.17985 38.7895 2.45985 42.9395 2.79985C47.0895 3.14985 51.5295 4.67985 56.2495 7.40985C62.0595 10.7599 67.4095 15.3699 72.2895 21.2199C75.3195 24.8599 77.9995 28.6799 80.3395 32.7099Z" stroke="white" stroke-linejoin="round" /><path d="M42.9502 69.6899C42.9502 71.6599 42.3402 72.7499 41.1202 72.9699C41.0402 72.9799 40.9602 72.9999 40.8802 72.9999C39.7102 73.1399 38.3202 72.7399 36.7202 71.8199C35.0102 70.8299 33.4902 69.3399 32.1602 67.3599C31.0002 65.6099 30.1102 63.5599 29.4802 61.1899C29.4002 60.8599 29.3202 60.5199 29.2402 60.1799L31.2602 59.1699L34.8202 57.3899C35.0702 57.6499 35.3202 57.8999 35.5602 58.1499C36.6302 59.2399 37.5702 60.2299 38.3802 61.1299C39.5202 62.4099 40.4002 63.4899 41.0402 64.3899C41.5102 65.0699 41.9002 65.7399 42.2002 66.3999C42.7002 67.5199 42.9502 68.6099 42.9502 69.6899Z" stroke="white" stroke-linejoin="round" /><path d="M62.9897 81.8499C62.7297 82.6699 62.4197 83.4399 62.0597 84.1699C61.3897 85.5599 60.6097 86.7799 59.6997 87.8299C58.6497 89.0899 57.4297 90.1099 56.0597 90.8899C53.5497 92.3299 50.5897 92.9099 47.1897 92.6499C43.7897 92.3799 40.1397 91.1299 36.2497 88.8799C31.3697 86.0599 26.8997 82.1699 22.8197 77.1899C20.5297 74.3999 18.4897 71.4799 16.7097 68.4499C15.3097 66.0899 14.0597 63.6499 12.9697 61.1399L20.6797 65.5899L25.1797 63.3399C25.2697 63.5899 25.3597 63.8399 25.4497 64.0799C26.0197 65.6099 26.6997 67.0499 27.4897 68.4099C29.0197 71.0499 31.0097 73.3999 33.4497 75.4699V80.1099L38.8997 83.2599L46.9497 79.2299L52.5197 76.4499C53.7297 77.3399 54.9797 78.1399 56.2497 78.8799C58.5797 80.2299 60.8297 81.2199 62.9897 81.8499Z" stroke="white" stroke-linejoin="round" /><path d="M12.1597 70.7299L8.21973 72.6999V63.1399C9.39973 65.7399 10.7197 68.2699 12.1597 70.7299Z" stroke="white" stroke-linejoin="round" /><path d="M32.6997 55.2398L29.9097 56.6298L28.2197 57.4798L24.1097 59.5298C24.1797 59.8398 24.2497 60.1498 24.3297 60.4498C24.5697 61.4398 24.8597 62.4098 25.1797 63.3398L20.6797 65.5898V58.4498L21.9997 57.7898L28.2197 54.6798L28.7997 54.3898L30.9697 53.3098C31.4997 53.9398 32.0797 54.5798 32.6997 55.2398Z" stroke="white" stroke-linejoin="round" /><path d="M33.6002 31.9399V34.6399C31.6402 33.9699 29.9902 33.8899 28.6602 34.4199L33.6002 31.9399Z" stroke="white" stroke-linejoin="round" /><path d="M44.4296 30.6297L39.0496 33.3197L35.2396 31.1197L33.5996 30.1697L39.9896 26.9797C40.4596 27.3197 40.9296 27.6697 41.3896 28.0397C42.4296 28.8497 43.4396 29.7097 44.4296 30.6297Z" stroke="white" stroke-linejoin="round" /><path d="M59.4603 98.9998L59.2803 99.0898" stroke="white" stroke-linejoin="round" /><path d="M90.5103 66.4899L70.5103 76.4899L64.2803 72.8999L84.2803 62.8999L90.5103 66.4899Z" stroke="white" stroke-linejoin="round" /><path d="M90.5103 34.3297L84.2803 37.4497L83.1903 37.9897L78.6103 40.2797L77.2403 40.9697L71.8203 43.6797L70.5103 44.3297L65.5503 41.4697L65.0903 41.2097L64.2803 40.7397L65.0703 40.3397H65.0803L66.9803 39.3897L75.7903 34.9797L80.3403 32.7097L84.2803 30.7397L90.5103 34.3297Z" stroke="white" stroke-linejoin="round" /><path d="M59.5303 52.2899L59.2403 52.1299L52.2803 48.1099L51.8203 47.8399L56.1903 45.6599C56.2703 45.7899 56.3403 45.9099 56.4103 46.0399C57.5603 48.0699 58.6003 50.1599 59.5303 52.2899Z" stroke="white" stroke-linejoin="round" /></svg>,
    },
    {
        name: 'Connect Wallet',
        color: 'bg-yellow-500',
        content: '[Question UI: 5]',
        graphic: <svg width="50" height="50" viewBox="0 0 94 119" fill="currentcolor" xmlns="http://www.w3.org/2000/svg" stroke-width="0.5px" stroke-linecap="round" stroke-linejoin="round"><path d="M71.6301 96.1899V116.02L54.3501 106.04V98.1099L64.7201 104.09V92.1899L65.4001 92.5799L71.6301 96.1899Z" stroke="white" stroke-linejoin="round" /><path d="M19.78 78.1498V86.0798L2.5 76.1098V56.2798L9.42 60.2698V72.1698L19.78 78.1498Z" stroke="white" stroke-linejoin="round" /><path d="M57.8001 60.44V92.17L34.5101 78.72L27.1501 74.47L16.7901 68.49L16.3301 68.22V36.5L36.3301 48.05L57.8001 60.44Z" stroke="white" stroke-linejoin="round" /><path d="M19.78 22.6299V30.5599L9.42 24.5699V36.4699L2.5 32.4799V12.6499L19.78 22.6299Z" stroke="white" stroke-linejoin="round" /><path d="M77.7998 69.31V82.17L57.7998 92.17V60.44L64.7198 56.98V68.4L71.6298 72.39L77.7998 69.31Z" stroke="white" stroke-linejoin="round" /><path d="M91.6301 42.5598L84.2701 46.2398L76.9001 49.9198L71.6301 52.5598L54.3501 42.5798L59.6201 39.9398L74.3501 32.5798L91.6301 42.5598Z" stroke="white" stroke-linejoin="round" /><path d="M91.6299 42.5598V62.3898L77.7999 69.3098L71.6299 72.3898V52.5598L76.8999 49.9198L84.2699 46.2398L91.6299 42.5598Z" stroke="white" stroke-linejoin="round" /><path d="M29.4199 25.7398V26.4698L9.41992 36.4698V24.5698L19.7799 30.5598L28.7399 26.0798L29.4199 25.7398Z" stroke="white" stroke-linejoin="round" /><path d="M39.78 12.6299L32.43 16.3099L29.42 17.8099L22.5 21.2699L19.78 22.6299L2.5 12.6499L22.5 2.6499L39.78 12.6299Z" stroke="white" stroke-linejoin="round" /><path d="M39.7798 12.6299V20.5599L29.4198 25.7399L28.7398 26.0799L19.7798 30.5599V22.6299L22.4998 21.2699L29.4198 17.8099L32.4298 16.3099L39.7798 12.6299Z" stroke="white" stroke-linejoin="round" /><path d="M64.7201 56.5V56.98L57.8001 60.44L36.3301 48.05L16.3301 36.5L36.3301 26.5L59.6201 39.94L54.3501 42.58V50.51L64.7201 56.5Z" stroke="white" stroke-linejoin="round" /><path d="M71.6301 52.5598V72.3898L64.7201 68.3998V56.4998L54.3501 50.5098V42.5798L71.6301 52.5598Z" stroke="white" stroke-linejoin="round" /><path d="M16.33 49.3699V56.8199L9.42 60.2699L2.5 56.2799L16.33 49.3699Z" stroke="white" stroke-linejoin="round" /><path d="M16.7899 68.4898L9.41992 72.1698V60.2698L16.3299 56.8198V68.2198L16.7899 68.4898Z" stroke="white" stroke-linejoin="round" /><path d="M27.1499 74.47L19.7799 78.15L9.41992 72.17L16.7899 68.49L27.1499 74.47Z" stroke="white" stroke-linejoin="round" /><path d="M34.5098 78.72L19.7798 86.08V78.15L27.1498 74.47L34.5098 78.72Z" stroke="white" stroke-linejoin="round" /><path d="M91.6299 86.1899V106.02L71.6299 116.02V96.1899L74.3499 94.8299L80.5899 91.7099L84.7199 89.6499L91.6299 86.1899Z" stroke="white" stroke-linejoin="round" /><path d="M91.6302 86.1899L84.7202 89.6499L80.5902 91.7099L74.3502 94.8299L71.6302 96.1899L65.4002 92.5799L64.7202 92.1899L84.7202 82.1899L91.6302 86.1899Z" stroke="white" stroke-linejoin="round" /><path d="M64.7201 92.9299V104.09L54.3501 98.1099L64.7201 92.9299Z" stroke="white" stroke-linejoin="round" /></svg>,
    },
]


interface RewardOption {
    id: number;
    title: string;
    description: string;
    users: string;
    graphic: React.ReactNode;
}

interface Content {
    // id: number;
    name: string;
    color: string;
    content: string;
    // graphic: React.ReactNode;
}



const rewardOptions: RewardOption[] = [
    {
        id: 1,
        title: 'Cryptocurrency Rewards',
        description: `
• **Airdrops:** Provide small amounts of cryptocurrency to users’ wallets upon completion of specific actions or learning milestones.
• **Discounts on Transaction Fees:** Offer reduced fees for future transactions on your platform as a reward for completing educational modules or tasks.
      `,
        users: 'Unlimited users',
        graphic: <svg width="50" height="50" viewBox="0 0 112 87" fill="currentcolor" xmlns="http://www.w3.org/2000/svg" strokeWidth="0.5px" stroke-linecap="round" strokeLinejoin="round"><path d="M15.8293 54.2799V74.2799L7.2793 69.3399V49.3399L15.8293 54.2799Z" stroke="white" strokeLinejoin="round" /><path d="M109.429 19.9999V39.9999L103.74 43.2799V32.1899C103.7 29.7299 102.589 27.3999 100.399 25.2099L109.429 19.9999Z" stroke="white" strokeLinejoin="round" /><path d="M91.6989 32.2699C91.7089 34.1999 90.5389 35.8399 88.2089 37.1899C88.0989 37.2499 87.9889 37.3199 87.8689 37.3699C85.5989 38.5899 82.8688 39.2099 79.6888 39.1999C76.3488 39.1899 73.5088 38.5099 71.1488 37.1499L71.0989 27.6799L71.0488 17.4699L88.1488 27.3399C88.9788 27.8199 89.6689 28.3399 90.2089 28.8999C90.7489 29.4499 91.1388 30.0299 91.3988 30.6499C91.5988 31.1699 91.6989 31.6999 91.6989 32.2699Z" stroke="white" strokeLinejoin="round" /><path d="M109.429 19.9999L100.869 15.0599L92.3792 19.9699L92.3192 19.9399L83.8192 15.0299L92.3192 10.1199L83.7692 5.17993L75.2692 10.0899L62.4392 2.67993L53.9392 7.58993L62.4993 12.5299L53.9993 17.4399L19.9993 37.0599L11.4492 32.1199L2.94922 37.0299L15.7792 44.4399L7.27917 49.3399L15.8292 54.2799L24.3292 49.3799L28.8192 51.9699L32.8792 54.3099L24.3792 59.2199L28.8693 61.8099L32.9392 64.1599L41.4392 59.2499C46.1392 61.9699 51.8292 63.3299 58.5092 63.3399C60.5192 63.3399 62.4293 63.2199 64.2493 62.9799C68.5093 62.4199 72.2692 61.1999 75.5392 59.3099C75.7592 59.1799 75.9792 59.0499 76.1892 58.9199C78.9392 57.2099 80.7893 55.2699 81.7393 53.0799C82.1893 52.0499 82.4393 51.0199 82.4993 49.9999C82.5693 48.6799 82.3193 47.3899 81.7493 46.0999C82.9893 46.0499 84.2192 45.9399 85.4292 45.7699C86.9092 45.5699 88.3592 45.2799 89.7892 44.9099C92.3792 44.2399 94.6992 43.3099 96.7592 42.1199C99.7492 40.3899 101.789 38.4199 102.849 36.1999C103.199 35.4899 103.449 34.7499 103.589 33.9799C103.689 33.4299 103.739 32.8799 103.739 32.3399V32.1899C103.699 29.7299 102.589 27.3999 100.399 25.2099L109.429 19.9999ZM66.9893 54.3699C66.8793 54.4299 66.7692 54.4999 66.6492 54.5499C64.3792 55.7799 61.6492 56.3999 58.4692 56.3899C55.1292 56.3799 52.2892 55.6999 49.9292 54.3399L45.5492 51.8099L37.3192 47.0599L28.5492 41.9999L45.5492 32.1899L54.3192 37.2499L62.8693 42.1899L66.9292 44.5299C69.2792 45.8899 70.4592 47.5299 70.4792 49.4599C70.4892 51.3899 69.3193 53.0299 66.9893 54.3699ZM88.2092 37.1899C88.0992 37.2499 87.9893 37.3199 87.8693 37.3699C85.5993 38.5899 82.8692 39.2099 79.6892 39.1999C76.3492 39.1899 73.5092 38.5099 71.1492 37.1499L54.2592 27.3999L54.0492 27.2799L71.0492 17.4699L88.1492 27.3399C88.9792 27.8199 89.6692 28.3399 90.2092 28.8999C90.7492 29.4499 91.1392 30.0299 91.3992 30.6499C91.5992 31.1699 91.6992 31.6999 91.6992 32.2699C91.7092 34.1999 90.5392 35.8399 88.2092 37.1899Z" stroke="white" strokeLinejoin="round" /><path d="M32.939 64.1599V84.1599L24.3789 79.2199V59.2199L28.869 61.8099L32.939 64.1599Z" stroke="white" strokeLinejoin="round" /><path d="M103.739 32.3399V52.3499C103.739 52.8899 103.689 53.4299 103.589 53.9799C102.999 57.1199 100.719 59.8299 96.7589 62.1199C94.6989 63.3099 92.3789 64.2399 89.7889 64.9099C87.4289 65.5199 84.999 65.9099 82.489 66.0599V59.0199L82.499 49.9999C82.569 48.6799 82.319 47.3899 81.749 46.0999C82.989 46.0499 84.219 45.9399 85.429 45.7699C86.909 45.5699 88.3589 45.2799 89.7889 44.9099C92.3789 44.2399 94.6989 43.3099 96.7589 42.1199C99.7489 40.3899 101.789 38.4199 102.849 36.1999C103.199 35.4899 103.449 34.7499 103.589 33.9799C103.689 33.4299 103.739 32.8799 103.739 32.3399Z" stroke="white" strokeLinejoin="round" /><path d="M71.1488 37.1499L54.2588 27.3999L54.0488 27.2799L71.0488 17.4699L71.0989 27.6799L71.1488 37.1499Z" stroke="white" strokeLinejoin="round" /><path d="M62.4995 12.5299L53.9995 17.4399L53.9395 7.5899L62.4995 12.5299Z" stroke="white" strokeLinejoin="round" /><path d="M15.7792 44.4399L7.27917 49.3399V59.5299L2.94922 57.0299V37.0299L15.7792 44.4399Z" stroke="white" strokeLinejoin="round" /><path d="M24.3291 49.3799V69.3799L15.8291 74.2799V54.2799L24.3291 49.3799Z" stroke="white" strokeLinejoin="round" /><path d="M32.879 54.3099L24.379 59.2199V69.4099L24.3291 69.3799V49.3799L28.8191 51.9699L32.879 54.3099Z" stroke="white" strokeLinejoin="round" /><path d="M45.5488 32.1899V51.8099L37.3188 47.0599L28.5488 41.9999L45.5488 32.1899Z" stroke="white" strokeLinejoin="round" /><path d="M70.4789 49.4599C70.4889 51.3899 69.3189 53.0299 66.9889 54.3699C66.8789 54.4299 66.7688 54.4999 66.6488 54.5499C64.3788 55.7799 61.6489 56.3999 58.4689 56.3899C55.1289 56.3799 52.2888 55.6999 49.9288 54.3399L45.5488 51.8099V32.1899L54.3188 37.2499L62.8689 42.1899L66.9288 44.5299C69.2788 45.8899 70.4589 47.5299 70.4789 49.4599Z" stroke="white" strokeLinejoin="round" /><path d="M92.3193 10.1199V19.9399L83.8193 15.0299L92.3193 10.1199Z" stroke="white" strokeLinejoin="round" /><path d="M41.4395 59.2499V79.2499L32.9395 84.1599V64.1599L41.4395 59.2499Z" stroke="white" strokeLinejoin="round" /><path d="M82.4895 66.0599V69.1299C82.5795 70.4699 82.3295 71.7199 81.7395 73.0799C80.7195 75.4399 78.6494 77.5099 75.5394 79.3099C70.8594 82.0099 65.1894 83.3499 58.5094 83.3399C51.8294 83.3299 46.1395 81.9699 41.4395 79.2499V59.2499C46.1395 61.9699 51.8294 63.3299 58.5094 63.3399C60.5194 63.3399 62.4295 63.2199 64.2495 62.9799C68.5095 62.4199 72.2694 61.1999 75.5394 59.3099C75.7594 59.1799 75.9795 59.0499 76.1895 58.9199C78.9395 57.2099 80.7895 55.2699 81.7395 53.0799C82.1895 52.0499 82.4395 51.0199 82.4995 49.9999V66.0599H82.4895Z" stroke="white" strokeLinejoin="round" /><path d="M82.4893 69.8399V69.1299" stroke="white" strokeLinejoin="round" /><path d="M82.499 49.9999V49.3599" stroke="white" strokeLinejoin="round" /></svg>,

    },
    {
        id: 2,
        title: 'NFTs',
        description: `
• **Badge NFTs:** Issue digital badges as NFTs that users can collect and display as proof of their achievements or learning progress.
• **Access NFTs:** Provide NFTs that can unlock additional services, content, or privileges on your platform or partner platforms.
      `,
        users: 'Limited edition',
        graphic: <svg width="50" height="50" viewBox="0 0 127 99" fill="currentcolor" xmlns="http://www.w3.org/2000/svg" strokeWidth="0.5px" stroke-linecap="round" strokeLinejoin="round"><path d="M70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM70.4197 58.0005V61.3605L70.4597 61.3905V58.0305L70.4197 58.0005ZM50.1997 73.5305V77.4705L50.2397 77.5005V73.5005L50.1997 73.5305Z" stroke="white" strokeLinejoin="round" /><path d="M124.46 38.0703V58.0703L93.8701 75.7303V55.7303L107.14 48.0703L124.46 38.0703Z" stroke="white" strokeLinejoin="round" /><path d="M93.87 55.7305V75.7305C93.42 75.3405 92.94 74.9805 92.43 74.6505C91.92 74.3305 91.35 73.9905 90.73 73.6305L89.65 73.0105V65.3105C89.64 64.4305 89.47 63.5905 89.15 62.7905C88.37 60.8105 86.64 59.0505 83.99 57.5205L77.57 53.8105L77.2 53.6005L70.46 57.4905V57.9105L70.42 57.9405V49.6905L63.64 45.7705C61.31 44.4205 58.67 43.4905 55.73 42.9805V37.3105C58.23 37.6105 60.62 38.1005 62.92 38.7705C63.12 38.8205 63.32 38.8805 63.51 38.9405C64.21 39.1505 64.89 39.3805 65.55 39.6305C67.26 40.2605 68.87 41.0105 70.38 41.8805L90.73 53.6305C91.35 53.9905 91.92 54.3305 92.43 54.6505C92.94 54.9805 93.42 55.3405 93.87 55.7305Z" stroke="white" strokeLinejoin="round" /><path d="M73.8799 63.3604V70.4903C72.8499 70.7103 71.7299 70.8204 70.5399 70.8204H70.4599C69.8299 70.8104 69.2299 70.7804 68.6499 70.7104C68.1199 70.6604 67.6099 70.5804 67.1299 70.4704V67.2504L70.4199 65.3503L70.4599 65.3304L73.4099 63.6303L73.8799 63.3604Z" stroke="white" strokeLinejoin="round" /><path d="M63.6798 53.5807V57.4707L55.7298 52.8907L53.5198 51.6107L49.6898 53.8207L46.7798 55.5007V59.3907L43.4098 57.4507C41.5498 56.3707 40.6098 55.0707 40.5998 53.5407C40.5898 52.6507 40.9098 51.8407 41.5298 51.1107C41.9798 50.5807 42.5898 50.0907 43.3698 49.6407C45.2198 48.5707 47.4698 48.0307 50.1198 48.0407C51.4798 48.0407 52.7398 48.1807 53.8898 48.4707C54.5398 48.6307 55.1498 48.8307 55.7298 49.0907C56.1298 49.2507 56.5198 49.4407 56.8898 49.6607L63.6798 53.5807Z" stroke="white" strokeLinejoin="round" /><path d="M43.4498 65.2505V85.2505L36.6698 81.3405C32.9398 79.1805 31.0598 76.5805 31.0498 73.5205V53.5205C31.0598 54.6505 31.3198 55.7105 31.8298 56.7205C32.2098 57.4805 32.7498 58.2105 33.4298 58.9005C34.2798 59.7705 35.3598 60.5805 36.6698 61.3405L40.9498 63.8105L43.4498 65.2505Z" stroke="white" strokeLinejoin="round" /><path d="M50.1997 61.3604V81.3604L43.4497 85.2504V65.2504L46.7797 63.3304L48.0997 62.5704L50.1997 61.3604Z" stroke="white" strokeLinejoin="round" /><path d="M33.4299 40.0005V48.1005C31.8299 49.7105 31.0399 51.5105 31.0499 53.5205V61.1105C30.6499 61.3205 30.2299 61.5605 29.7999 61.8005C27.9999 62.8405 26.4699 63.9805 25.2099 65.2405C23.9499 66.4905 23.0099 67.8105 22.3999 69.2105V49.2105C23.0099 47.8105 23.9499 46.4905 25.2099 45.2405C25.5599 44.8905 25.9199 44.5605 26.3099 44.2405C27.3299 43.3605 28.4899 42.5505 29.7999 41.8005C30.4199 41.4505 31.0099 41.1205 31.5699 40.8305C32.1299 40.5405 32.7499 40.2605 33.4299 40.0005Z" stroke="white" strokeLinejoin="round" /><path d="M89.6497 65.3101V65.4301C89.6497 67.6201 88.6597 69.5701 86.6797 71.2901C85.9497 71.9501 85.0798 72.5601 84.0698 73.1401C82.7198 73.9201 81.2697 74.5501 79.7097 75.0501C77.9097 75.6201 75.9598 76.0001 73.8798 76.1801C73.4398 76.2301 72.9997 76.2601 72.5497 76.2801C71.8997 76.3201 71.2398 76.3301 70.5698 76.3301H70.4597C69.3097 76.3201 68.1998 76.2701 67.1298 76.1601C63.2898 75.7801 59.9197 74.7601 57.0197 73.0901L50.2397 69.1701L52.0298 68.1401L56.9798 65.2801L63.6797 69.1501L63.7598 69.2001C64.7698 69.7801 65.8898 70.2001 67.1298 70.4701C67.6098 70.5801 68.1197 70.6601 68.6497 70.7101C69.2297 70.7801 69.8297 70.8101 70.4597 70.8201H70.5398C71.7298 70.8201 72.8498 70.7101 73.8798 70.4901C75.1398 70.2301 76.2798 69.8101 77.2898 69.2201C78.3398 68.6101 79.0997 67.9301 79.5497 67.1701C79.8897 66.5901 80.0598 65.9801 80.0598 65.3201C80.0498 64.5301 79.7997 63.8001 79.2997 63.1301C78.8297 62.5001 78.1498 61.9301 77.2498 61.4101L70.8297 57.7001L70.4597 57.4901L77.1998 53.6001L77.5698 53.8101L83.9897 57.5201C86.6397 59.0501 88.3697 60.8101 89.1497 62.7901C89.4697 63.5901 89.6397 64.4301 89.6497 65.3101Z" stroke="white" strokeLinejoin="round" /><path d="M89.6497 65.4302V85.3102C89.6997 88.3602 87.8398 90.9602 84.0698 93.1402C80.3698 95.2802 75.8598 96.3402 70.5698 96.3302C65.2698 96.3202 60.7497 95.2402 57.0197 93.0902L50.2397 89.1702V69.1702L57.0197 73.0902C59.9197 74.7602 63.2898 75.7802 67.1298 76.1602C68.1998 76.2702 69.3097 76.3202 70.4597 76.3302H70.5698C71.2398 76.3302 71.8997 76.3202 72.5497 76.2802C72.9997 76.2602 73.4398 76.2302 73.8798 76.1802C75.9598 76.0002 77.9097 75.6202 79.7097 75.0502C81.2697 74.5502 82.7198 73.9202 84.0698 73.1402C85.0798 72.5602 85.9497 71.9502 86.6797 71.2902C88.6597 69.5702 89.6497 67.6202 89.6497 65.4302Z" stroke="white" strokeLinejoin="round" /><path d="M73.8798 63.3604L73.4098 63.6303L70.4598 65.3304L70.4198 65.3503L67.1298 67.2504L63.6798 65.2604L46.7798 55.5004L49.6898 53.8204L53.5198 51.6104L55.7298 52.8904L63.6798 57.4704L70.4198 61.3604L70.4598 61.3904L73.8798 63.3604Z" stroke="white" strokeLinejoin="round" /><path d="M63.4 2.82031L2.72998 37.8503L20.05 47.8503L22.4 49.2103C23.01 47.8103 23.95 46.4903 25.21 45.2403C25.56 44.8903 25.92 44.5603 26.31 44.2403C27.33 43.3603 28.49 42.5503 29.8 41.8003C30.42 41.4503 31.01 41.1203 31.57 40.8303C32.13 40.5403 32.75 40.2603 33.43 40.0003L29.78 37.9003L43.26 30.1103L47.02 32.2803L55.73 37.3103C58.23 37.6103 60.62 38.1003 62.92 38.7703C63.12 38.8203 63.32 38.8803 63.51 38.9403C64.21 39.1503 64.89 39.3803 65.55 39.6303C67.26 40.2603 68.87 41.0103 70.38 41.8803L90.73 53.6303C91.35 53.9903 91.92 54.3303 92.43 54.6503C92.94 54.9803 93.42 55.3403 93.87 55.7303L107.14 48.0703L124.46 38.0703L63.4 2.82031ZM63.57 34.0503L53.76 28.3903L50 26.2203L63.49 18.4403L77.06 26.2703L73.22 28.4903L63.57 34.0503ZM93.57 40.2403L83.93 45.8103L70.36 37.9703L80 32.4003L83.84 30.1903L97.41 38.0203L93.57 40.2403Z" stroke="white" strokeLinejoin="round" /><path d="M55.7298 37.3104V42.9203L55.6398 42.9704C53.8998 42.6704 52.0498 42.5204 50.0898 42.5204C44.7998 42.5104 40.2898 43.5804 36.5898 45.7204C35.3098 46.4604 34.2498 47.2503 33.4298 48.1003V40.0004L29.7798 37.9004L43.2598 30.1104L47.0198 32.2803L55.7298 37.3104Z" stroke="white" strokeLinejoin="round" /><path d="M63.57 34.0504L53.76 28.3904L50 26.2204L63.49 18.4404L63.51 22.8904L63.57 34.0504Z" stroke="white" strokeLinejoin="round" /><path d="M77.0598 26.2704L73.2198 28.4904L63.5698 34.0504L63.5098 22.8904L63.4897 18.4404L77.0598 26.2704Z" stroke="white" strokeLinejoin="round" /><path d="M83.9299 45.8104L70.3599 37.9704L79.9999 32.4004L83.8399 30.1904L83.8699 34.6304L83.9299 45.8104Z" stroke="white" strokeLinejoin="round" /><path d="M97.4099 38.0204L93.5699 40.2404L83.9298 45.8104L83.8698 34.6304L83.8398 30.1904L97.4099 38.0204Z" stroke="white" strokeLinejoin="round" /><path d="M70.4199 58.0004V57.9404" stroke="white" strokeLinejoin="round" /><path d="M70.4202 57.9404L70.3602 57.9704L70.4202 58.0004V61.3604L63.6802 57.4704V53.5804L70.4202 49.6904V57.9404Z" stroke="white" strokeLinejoin="round" /><path d="M67.1298 67.2505V70.4705C65.8898 70.2005 64.7698 69.7805 63.7598 69.2005L63.6798 69.1505L56.9798 65.2805L52.0298 68.1405L50.2398 69.1705V73.5005L50.1998 73.5305V61.3605L46.7798 59.3905V55.5005L63.6798 65.2605L67.1298 67.2505Z" stroke="white" strokeLinejoin="round" /><path d="M70.4199 49.6901L63.6799 53.5801L56.8899 49.6601C56.5199 49.4401 56.1299 49.2501 55.7299 49.0901C55.1499 48.8301 54.5399 48.6301 53.8899 48.4701C52.7399 48.1801 51.4799 48.0401 50.1199 48.0401C47.4699 48.0301 45.2199 48.5701 43.3699 49.6401C42.5899 50.0901 41.9799 50.5801 41.5299 51.1101C40.9099 51.8401 40.5899 52.6501 40.5999 53.5401C40.6099 55.0701 41.5499 56.3701 43.4099 57.4501L46.7799 59.3901L50.1999 61.3601L48.0999 62.5701L46.7799 63.3301L43.4499 65.2501L40.9499 63.8101L36.6699 61.3401C35.3599 60.5801 34.2799 59.7701 33.4299 58.9001C32.7499 58.2101 32.2099 57.4801 31.8299 56.7201C31.3199 55.7101 31.0599 54.6501 31.0499 53.5201C31.0399 51.5101 31.8299 49.7101 33.4299 48.1001C34.2499 47.2501 35.3099 46.4601 36.5899 45.7201C40.2899 43.5801 44.7999 42.5101 50.0899 42.5201C52.0499 42.5201 53.8999 42.6701 55.6399 42.9701C55.6699 42.9801 55.6999 42.9801 55.7299 42.9801C58.6699 43.4901 61.3099 44.4201 63.6399 45.7701L70.4199 49.6901Z" stroke="white" strokeLinejoin="round" /><path d="M80.06 65.3202C80.06 65.9802 79.89 66.5902 79.55 67.1702C79.1 67.9302 78.34 68.6102 77.29 69.2202C76.28 69.8102 75.14 70.2302 73.88 70.4902V63.3602L70.46 61.3902V57.4902L70.83 57.7002L77.25 61.4102C78.15 61.9302 78.83 62.5002 79.3 63.1302C79.8 63.8002 80.05 64.5302 80.06 65.3202Z" stroke="white" strokeLinejoin="round" /><path d="M22.4 49.2101V69.2101L2.72998 57.8501V37.8501L20.05 47.8501L22.4 49.2101Z" stroke="white" strokeLinejoin="round" /></svg>,
    },
    {
        id: 6,
        title: 'Partnership Perks',
        description: `
    • **Software Tools:** Collaborate with other software providers to offer free or discounted access to tools that can benefit users in their blockchain ventures.
    • **Event Tickets:** Provide tickets to blockchain or tech conferences as a reward for completing significant milestones.
          `,
        users: 'Partnered users',
        graphic: <svg width="50" height="50" viewBox="0 0 99 103" fill="currentcolor" xmlns="http://www.w3.org/2000/svg" strokeWidth="0.5px" stroke-linecap="round" strokeLinejoin="round"><path d="M49.53 80.19V100.19L2.24023 72.89V52.89L19.5601 62.89L36.8101 72.85L49.53 80.19Z" stroke="white" strokeLinejoin="round" /><path d="M49.1104 2.43005L2.11035 29.56L15.6204 37.36L22.3403 33.4901L15.5803 29.58L49.1504 10.2L82.9304 29.7101L76.2104 33.58L82.9705 37.48L96.3904 29.73L49.1104 2.43005Z" stroke="white" strokeLinejoin="round" /><path d="M93.5701 51.36L82.9702 45.2401L76.2102 41.34L49.2302 25.76L49.1501 25.81L22.3401 41.29L15.6201 45.16L5.06006 51.26L2.24023 52.89L19.5601 62.89L36.8101 72.85L49.53 80.19L49.8301 80.0201L53.2502 78.04L58.9902 74.73L79.2002 63.06L96.52 53.06L93.5701 51.36ZM56.4502 58.1801L52.02 57.9901L49.3601 60.45L45.3201 64.19L42.2502 57.09L40.7002 56.87L32.1301 55.63L29.9502 55.32L37.1802 52.72L40.7002 51.45L40.6101 50.7401L39.7402 44.2101L46.3501 47.42L49.3601 48.89L53.1501 48.0201L61.1301 46.19L57.9602 50.8L56.4502 52.9901L64.5601 58.54L56.4502 58.1801Z" stroke="white" strokeLinejoin="round" /><path d="M61.1304 46.19L57.9604 50.8L56.4504 52.9901V58.1801L52.0203 57.9901L49.3604 60.45V48.89L53.1504 48.0201L61.1304 46.19Z" stroke="white" strokeLinejoin="round" /><path d="M49.3601 48.89V60.45L45.3201 64.19L42.2502 57.09L40.7002 56.87V51.45L40.6101 50.7401L39.7402 44.2101L46.3501 47.42L49.3601 48.89Z" stroke="white" strokeLinejoin="round" /><path d="M40.7002 51.45V56.87L32.1301 55.63L29.9502 55.32L37.1802 52.72L40.7002 51.45Z" stroke="white" strokeLinejoin="round" /><path d="M64.5601 58.54L56.4502 58.1801V52.9901L64.5601 58.54Z" stroke="white" strokeLinejoin="round" /><path d="M96.5203 53.06V73.06L49.5303 100.19V80.29L49.8303 80.0201L53.2505 78.04L58.9905 74.73L79.2004 63.06L96.5203 53.06Z" stroke="white" strokeLinejoin="round" /><path d="M15.6204 37.36V45.16L5.0603 51.26L2.11035 49.56V29.56L15.6204 37.36Z" stroke="white" strokeLinejoin="round" /><path d="M22.3401 33.4901V41.29L15.6201 45.16V37.36L22.3401 33.4901Z" stroke="white" strokeLinejoin="round" /><path d="M49.1501 10.2V25.81L22.3401 41.29V33.4901L15.5801 29.58L49.1501 10.2Z" stroke="white" strokeLinejoin="round" /><path d="M82.9304 29.7101L76.2104 33.58V41.34L49.2305 25.76L49.1504 25.81V10.2L82.9304 29.7101Z" stroke="white" strokeLinejoin="round" /><path d="M82.9709 37.48V45.2401L76.2109 41.34V33.58L82.9709 37.48Z" stroke="white" strokeLinejoin="round" /><path d="M96.3906 29.73V49.73L93.5706 51.36L82.9707 45.2401V37.48L96.3906 29.73Z" stroke="white" strokeLinejoin="round" /></svg>,
    },
]

export default function ContentForm() {
    const [name, setName] = useState('');
    const [description, setDescription] = useState('');
    const [rewardInstructions, setRewardInstructions] = useState('');
    const [steps, setSteps] = useState([{ step: 1, title: '', content: '' }]);
    const [selectedRewardOption, setSelectedRewardOption] = useState(rewardOptions[0])
    const [open, setOpen] = useState(true)

    const router = useRouter(); // For navigation after form submission

    const addStep = () => {
        setSteps([...steps, { step: steps.length + 1, title: '', content: '' }]);
    };

    const handleStepChange = (index: number, field: string, value: string) => {
        console.log(value)
        const updatedSteps = steps.map((step, i) =>
            i === index ? { ...step, [field]: value } : step
        );
        setSteps(updatedSteps);
    };

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();

        const contentData = {
            name,
            description,
            rewardInstructions,
            steps,
        };

        console.log(contentData)
        try {
            const response = await fetch('/api/POST/createForm', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(contentData),
            });

            if (response.ok) {
                const responseData = await response.json();
                const contentId = responseData.id; // Extract the content id
                alert(`Content created successfully with ID: ${contentId}`);
                router.push(`/flow/${contentId}`); // Navigate to the home page after successful submission
            } else {
                alert('Failed to create content');
            }
        } catch (error) {
            console.error('Error creating content:', error);
        }
    };

    return (
        <div className=" mx-auto text-black ">
            <form onSubmit={handleSubmit}>
                <div className="  flex w-full  ">
                    <input
                        type="text"
                        value={name}
                        onChange={(e) => setName(e.target.value)}
                        className="focus:border-none focus:outline-none rounded p-2 w-full text-pretty text-4xl font-medium tracking-tighter text-gray-950 data-[dark]:text-white sm:text-6xl"
                        placeholder="Name your flow!"
                        spellCheck={false}
                        required
                    />
                </div>
                <div className="mb-4">

                </div>
                <div className="mb-4">
                    <textarea
                        value={description}
                        onChange={(e) => setDescription(e.target.value)}
                        className="focus:border-none focus:outline-none rounded p-2 w-full text-pretty text-lg font-medium tracking-tighter text-gray-950 data-[dark]:text-white sm:text-xl"
                        placeholder='Give it a description'
                        required
                    />
                </div>

                <div className='flex gap-4 justify-left items-center'>
                    <h2 className="text-xl  ml-2">Questions</h2>
                    <button
                        type="button"
                        onClick={addStep}
                        className="bg-white text-[#A479FF] border border-[#A479FF] rounded-full flex py-2 px-3 items-center justify-center text-center hover:bg-black hover:text-white"
                    >
                        <PlusIcon className='h-4 w-4 font-bold' />
                        <p className='uppercase text-xs font-bold'>Add Question</p>
                    </button>
                </div>


                {steps.map((step, index) => {
                    // Find the selected option based on step.content
                    const selectedOption = options.find(option => option.content === step.content);
                    return (
                        <div key={index} className="mb-2 flex w-full justify-between">
                            <div className="mb-2 w-10/12">
                                <input
                                    type="text"
                                    value={step.title}
                                    placeholder={`Question ${index + 1}`}
                                    onChange={(e) => handleStepChange(index, 'title', e.target.value)}
                                    className="focus:border-none focus:outline-none rounded p-2 w-full text-pretty text-lg font-medium tracking-tighter text-gray-950 data-[dark]:text-white sm:text-xl"
                                    required
                                />
                            </div>
                            <div className="mb-2">
                                <fieldset>
                                    <RadioGroup
                                        value={step.content}
                                        onChange={(value) => handleStepChange(index, 'content', value)}
                                        className="flex items-center space-x-3">
                                        {/* <Accordion type="single" collapsible className='border-none w-full'>
                                            <AccordionItem value={`item-${index}`}>
                                                <AccordionTrigger>    {selectedOption ? selectedOption.name : 'Select an option'}</AccordionTrigger>
                                                <AccordionContent className="flex items-center space-x-3">
                                                    {options.map((option) => (
                                                        <div className='flex flex-col items-center'>
                                                            <Radio
                                                                key={option.name}
                                                                value={option.content}
                                                                aria-label={option.name}
                                                                className="group relative flex flex-col cursor-pointer rounded-lg border border-gray-300 bg-white p-4 shadow-sm focus:outline-none data-[focus]:border-[#A479FF] data-[focus]:ring-2 data-[focus]:ring-[#A479FF] group-data-[checked]:bg-[#A479FF]"
                                                            >
                                                                <div className="text-2xl text-black transition-colors duration-500 group-hover:text-[#A479FF] group-data-[checked]:text-[#A479FF]">
                                                                    {option.graphic}
                                                                </div>
                                                                <span
                                                                    aria-hidden="true"
                                                                    className="pointer-events-none absolute -inset-px rounded-lg border-2 border-transparent group-data-[focus]:border group-data-[checked]:border-[#A479FF]"
                                                                />
                                                            </Radio>
                                                            <p className="block text-sm font-medium text-gray-900">
                                                                {option.name}</p>
                                                        </div>
                                                    ))}

                                                </AccordionContent>
                                            </AccordionItem>
                                        </Accordion> */}

                                        <Sheet>
                                            <SheetTrigger
                                                className="bg-white text-[#A479FF] border border-[#A479FF] rounded-full flex py-2 px-3 items-center justify-center text-center hover:bg-black hover:text-white"
                                            >
                                                {selectedOption ? selectedOption.name : 'Select an option'}
                                            </SheetTrigger>
                                            <SheetContent className='bg-white text-black'>
                                                <SheetHeader className='mb-5'>
                                                    <SheetTitle>UI Toolbox</SheetTitle>
                                                    {/* <SheetDescription>
                                                        This action cannot be undone. This will permanently delete your account
                                                        and remove your data from our servers.
                                                    </SheetDescription> */}
                                                </SheetHeader>
                                                <div className='flex grid grid-cols-3'>
                                                    {options.map((option) => (
                                                        <div className='flex flex-col items-center'>
                                                            <Radio
                                                                key={option.name}
                                                                value={option.content}
                                                                aria-label={option.name}
                                                                className="group relative flex flex-col cursor-pointer rounded-lg border border-gray-300 bg-white p-4 shadow-sm focus:outline-none data-[focus]:border-[#A479FF] data-[focus]:ring-2 data-[focus]:ring-[#A479FF] group-data-[checked]:bg-[#A479FF]"
                                                            >
                                                                <div className="text-2xl text-black transition-colors duration-500 group-hover:text-[#A479FF] group-data-[checked]:text-[#A479FF]">
                                                                    {option.graphic}
                                                                </div>
                                                                <span
                                                                    aria-hidden="true"
                                                                    className="pointer-events-none absolute -inset-px rounded-lg border-2 border-transparent group-data-[focus]:border group-data-[checked]:border-[#A479FF]"
                                                                />
                                                            </Radio>
                                                            <p className="block text-sm font-medium text-gray-900 mb-2">
                                                                {option.name}
                                                            </p>
                                                        </div>
                                                    ))}
                                                </div>
                                            </SheetContent>
                                        </Sheet>

                                    </RadioGroup>
                                </fieldset>
                            </div>
                        </div>
                    )
                })}


                <fieldset>
                    <RadioGroup
                        value={selectedRewardOption}
                        onChange={setSelectedRewardOption}
                        className="mt-6  grid grid-cols-1 gap-y-6 sm:grid-cols-7 sm:gap-x-4"
                    >
                        {rewardOptions.map((rewardOption) => (
                            <Radio
                                key={rewardOption.id}
                                value={rewardOption}
                                aria-label={rewardOption.title}
                                aria-description={`${rewardOption.description} to ${rewardOption.users}`}
                                className="group relative flex flex-col cursor-pointer rounded-lg border border-gray-300 bg-white p-4 shadow-sm focus:outline-none data-[focus]:border-[#A479FF] data-[focus]:ring-2 data-[focus]:ring-[#A479FF] group-data-[checked]:bg-[#A479FF]"
                            >
                                <div className="text-2xl text-black transition-colors duration-500 group-hover:text-[#A479FF] group-data-[checked]:text-[#A479FF]">
                                    {rewardOption.graphic}
                                </div>
                                <span className="flex mt-4">
                                    <span className="flex flex-col">
                                        <span className="block text-sm font-medium text-gray-900">{rewardOption.title}</span>
                                    </span>
                                </span>

                                <span
                                    aria-hidden="true"
                                    className="pointer-events-none absolute -inset-px rounded-lg border-2 border-transparent group-data-[focus]:border group-data-[checked]:border-[#A479FF]"
                                />
                            </Radio>
                        ))}
                    </RadioGroup>
                </fieldset>

                <div className='mt-5'>
                    <button
                        type="submit"
                        className="bg-[#A479FF] w-[250px] h-12 rounded-full text-white py-2 px-4 hover:bg-[#8e56d4] transition-colors duration-300  "
                    >
                        Generate flow
                    </button>
                </div>

            </form>
        </div>
    );
}



const IncentiveCalculator = () => {
    const [numOfPeople, setNumOfPeople] = useState('');
    const [prizePool, setPrizePool] = useState('');
    const [incentivePerPerson, setIncentivePerPerson] = useState<number | null>(null);
    const { account, chainId } = useWallet();

    useEffect(() => {
        // Automatically calculate when the inputs change
        const people = parseFloat(numOfPeople);
        const pool = parseFloat(prizePool);

        if (!isNaN(people) && !isNaN(pool) && people > 0 && pool > 0) {
            const incentive = pool / people;
            setIncentivePerPerson(incentive);
        } else {
            setIncentivePerPerson(null); // Reset if inputs are invalid
        }
    }, [numOfPeople, prizePool]); // Run the effect whenever these values change

    return (
        <div className="max-w-md mx-auto mt-10 p-6 text-black">


            <div className="mb-4">
                <p
                    className='ml-2 text-pretty text-sm font-medium tracking-tighter'
                >Distribution Target</p>
                <input
                    type="number"
                    value={numOfPeople}
                    min={1}
                    onChange={(e) => setNumOfPeople(e.target.value)}
                    className="focus:border-none focus:outline-none rounded p-2 w-full text-pretty text-2xl font-medium tracking-tighter text-gray-950 data-[dark]:text-white sm:text-5xl"
                    placeholder="Target"
                />
            </div>

            <div className='flex items-center'>
                <div className="mb-4">
                    <p
                        className='ml-2 text-pretty text-sm font-medium tracking-tighter'
                    >Pool amount</p>
                    <input
                        type="number"
                        min={1}
                        value={prizePool}
                        onChange={(e) => setPrizePool(e.target.value)}
                        className="focus:border-none focus:outline-none rounded p-2 w-full text-pretty text-2xl font-medium tracking-tighter text-gray-950 data-[dark]:text-white sm:text-5xl"
                        placeholder="Prize pool"
                    />
                </div>

                <div >
                    {/* <p
                        className='ml-2 text-pretty text-sm font-medium tracking-tighter'
                    >Reward token</p> */}
                    <Select>
                        <SelectTrigger
                            className="w-[180px] border-none shadow-none"
                            defaultValue={"cUSD"}>
                            <SelectValue
                                className="uppercase text-pretty text-4xl font-medium tracking-tighter text-gray-950 data-[dark]:text-white sm:text-5xl"
                                placeholder="Select Token" />
                        </SelectTrigger>
                        <SelectContent>
                            <SelectItem value="cUSD">
                                <TokenIcon
                                    symbol='usdc'
                                    displaySize={32}
                                />
                            </SelectItem>
                            <SelectItem value="cbETH">
                                <TokenIcon
                                    symbol='eth'
                                    displaySize={32}
                                />
                            </SelectItem>
                        </SelectContent>
                    </Select>
                </div>
            </div>


            {/* CSS to remove the number input spinner */}
            <style jsx>{`
        /* Chrome, Safari, Edge, Opera */
        input[type='number']::-webkit-outer-spin-button,
        input[type='number']::-webkit-inner-spin-button {
          -webkit-appearance: none;
          margin: 0;
        }

        /* Firefox */
        input[type='number'] {
          -moz-appearance: textfield;
        }
      `}</style>

            <p
                className='ml-2 text-pretty text-sm font-medium tracking-tighter'
            >Incentive per user</p>
            {incentivePerPerson !== null && (
                <div className="mt-2 p-4 ">
                    <p className='ml-2 text-center text-pretty text-4xl font-semibold tracking-tighter'>
                        {incentivePerPerson.toFixed(6)} ETH
                    </p>
                </div>
            )}

            {incentivePerPerson == null && (
                <Skeleton className="mt-2 p-7 " />
            )}



        </div>
    );
};


// <>
//     <IncentiveCalculator />
//     <Dialog open={open} onClose={setOpen} className="relative z-10">
//         <DialogBackdrop
//             transition
//             className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity data-[closed]:opacity-0 data-[enter]:duration-300 data-[leave]:duration-200 data-[enter]:ease-out data-[leave]:ease-in"
//         />

//         <div className="fixed inset-0 z-10 w-screen overflow-y-auto">
//             <div className="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
//                 <DialogPanel
//                     transition
//                     className="relative transform overflow-hidden rounded-lg bg-white px-4 pb-4 pt-5 text-left shadow-xl transition-all data-[closed]:translate-y-4 data-[closed]:opacity-0 data-[enter]:duration-300 data-[leave]:duration-200 data-[enter]:ease-out data-[leave]:ease-in sm:my-8 sm:w-full sm:max-w-lg sm:p-6 data-[closed]:sm:translate-y-0 data-[closed]:sm:scale-95"
//                 >
//                     {/* <div className="absolute right-0 top-0 hidden pr-4 pt-4 sm:block">
//                         <button
//                             type="button"
//                             onClick={() => setOpen(false)}
//                             className="rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
//                         >
//                             <span className="sr-only">Close</span>
//                             <XMarkIcon aria-hidden="true" className="h-6 w-6" />
//                         </button>
//                     </div>
//                     <div className="sm:flex sm:items-start">
//                         <div className="mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
//                             <ExclamationTriangleIcon aria-hidden="true" className="h-6 w-6 text-red-600" />
//                         </div>
//                         <div className="mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left">
//                             <DialogTitle as="h3" className="text-base font-semibold leading-6 text-gray-900">
//                                 Deactivate account
//                             </DialogTitle>
//                             <div className="mt-2">
//                                 <p className="text-sm text-gray-500">
//                                     Are you sure you want to deactivate your account? All of your data will be permanently removed from
//                                     our servers forever. This action cannot be undone.
//                                 </p>
//                             </div>
//                         </div>
//                     </div> */}
//                     <IncentiveCalculator />
//                     <div className="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
//                         <button
//                             type="button"
//                             onClick={() => setOpen(false)}
//                             className="inline-flex w-full justify-center rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 sm:ml-3 sm:w-auto"
//                         >
//                             Deactivate
//                         </button>
//                         <button
//                             type="button"
//                             onClick={() => setOpen(false)}
//                             className="mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto"
//                         >
//                             Cancel
//                         </button>
//                     </div>
//                 </DialogPanel>
//             </div>
//         </div>
//     </Dialog>
// </>